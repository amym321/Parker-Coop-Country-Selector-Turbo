
  <script type="text/javascript" src="/services/javascripts/currencies.js" data-no-instant></script>
  <script type="text/javascript" src="{{ "jquery.currencies.min.js" | asset_url }}" data-no-instant></script>

  <script type="text/javascript">

    {% if settings.currency_format %}
      Currency.format = '{{ settings.currency_format }}';
    {% endif %}

    var shopCurrency = '{{ shop.currency }}';

    /* Sometimes merchants change their shop currency, let's tell our JavaScript file */
    Currency.money_with_currency_format[shopCurrency] = {{ shop.money_with_currency_format | strip_html | json }};
    Currency.money_format[shopCurrency] = {{ shop.money_format | strip_html | json }};

    /* Default currency */
    var defaultCurrency = '{{ settings.default_currency }}' || shopCurrency;

    if ($(window).width() >= 798) {
      var $currencySelector = $(".top_bar [data-currency-converter]");
    } else {
      var $currencySelector = $("#mobile_menu [data-currency-converter]");
    }

    /* Cookie currency */
    var cookieCurrency = Currency.cookie.read();

    /* Fix for customer account pages */
    $('span.money span.money').each(function() {
      $(this).parents('span.money').removeClass('money');
    });

    /* Saving the current price */
    $('span.money').each(function() {
      $(this).attr('data-currency-{{ shop.currency }}', $(this).html());
    });

    // If there's no cookie.
    if (cookieCurrency == null) {
      if (shopCurrency !== defaultCurrency) {
        Currency.convertAll(shopCurrency, defaultCurrency);
        $('.selected-currency').text(Currency.currentCurrency);
      }
      else {
        Currency.currentCurrency = defaultCurrency;
      }
    }
    // If the cookie value does not correspond to any value in the currency dropdown.
    else if ($currencySelector.length && $currencySelector.find('option[value=' + cookieCurrency + ']').length === 0) {
      Currency.currentCurrency = shopCurrency;
      Currency.cookie.write(shopCurrency);
    }
    else if (cookieCurrency === shopCurrency) {
      Currency.currentCurrency = shopCurrency;
    }
    else {
      Currency.convertAll(shopCurrency, cookieCurrency);
      $('.selected-currency').text(Currency.currentCurrency);
    }

    $currencySelector.val(Currency.currentCurrency).change(function() {
      var newCurrency = $(this).val();
      Currency.convertAll(Currency.currentCurrency, newCurrency);
      $('.selected-currency').text(Currency.currentCurrency);

      // on currency change, show/hide products based on currency -am
      var productThumbs = document.querySelectorAll("#product-thumbnail"), i;
      console.log('log 18) productThumbs.length = '+ productThumbs.length);

      for (i = 0; i < productThumbs.length; ++i) {
        var thumbShowHide = productThumbs[i].dataset.showHide;

        if (Currency.currentCurrency !== "GBP") {
          if (thumbShowHide === "show-uk-only") {
            productThumbs[i].classList.add('hide');
          } else {
            productThumbs[i].classList.remove('hide');
          }
        } else {
          if (thumbShowHide === "hide-uk") {
            productThumbs[i].classList.add('hide');
          } else {
            productThumbs[i].classList.remove('hide');
          }
        }
      }
    });

    // on page load, show/hide products based on currency -am
    var productThumbs = document.querySelectorAll("#product-thumbnail"), i;
    console.log('log 11) productThumbs.length = '+ productThumbs.length);

    for (i = 0; i < productThumbs.length; ++i) {
      var thumbShowHide = productThumbs[i].dataset.showHide;

      if (Currency.currentCurrency !== "GBP") {
        if (thumbShowHide === "show-uk-only") {
          productThumbs[i].classList.add('hide');
        } else {
          productThumbs[i].classList.remove('hide');
        }
      } else {
        if (thumbShowHide === "hide-uk") {
          productThumbs[i].classList.add('hide');
        } else {
          productThumbs[i].classList.remove('hide');
        }
      }
    }

    var original_selectCallback = window.selectCallback;
    var selectCallback = function(variant, selector) {
      original_selectCallback(variant, selector);
      Currency.convertAll(shopCurrency, $currencySelector.val());
      $('.selected-currency').text(Currency.currentCurrency);
    };

    function convertCurrencies() {

      if($currencySelector.val() && $currencySelector.val() != $currencySelector.data('default-shop-currency')) {
        Currency.convertAll($currencySelector.data('default-shop-currency'), $currencySelector.val());
        $('.selected-currency').text(Currency.currentCurrency);
      }
    }
</script>
